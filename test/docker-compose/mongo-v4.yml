version: '2.1'
services:

  elasticsearch:
    command: -E cluster.name=test-cluster -E network.host=_site_
    volumes:
      - ${TEST_DIR}/data:/Data
    image: elasticsearch:5.6
    container_name: elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
    - bootstrap.memory_local=true
    ports:
    - 49200:9200
    - 49300:9300
    networks:
    - dbnet

  mongo:
    image: mongo:4.0
    container_name: mongo
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 12
    command: mongod --smallfiles --replSet test
    volumes:
    - ${TEST_DIR}/data:/Data
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
    - 47017:27017
    networks:
    - dbnet

  syncer:
    image: syncer:test
    container_name: syncer
    depends_on:
      mongo:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:40000/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
    ports:
    - 40000:40000
    volumes:
    - ${TEST_DIR}/data:/data
    - ${TEST_DIR}/data/syncer/log:/log
    environment:
    - ES_ADDR=elasticsearch
    - ES_CLUSTER=test-cluster
    - MYSQL_IN=mysql_0
    - MYSQL_IN_PASS=root
    - MYSQL_OUT=mysql_0
    - MYSQL_OUT_USER=root
    - MYSQL_OUT_PASS=root
    - MONGO_IN=mongo
    - SYNCER_PRODUCER=/data/config/producer.yml
    - SYNCER_CONSUMER=/data/config/consumer/
    - EXTRA_OPT=--debug
    networks:
    - dbnet

networks:
  dbnet:
    driver: bridge
